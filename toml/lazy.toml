[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = 'source ~/.vim/rc/plugins/denite.rc.vim'
hook_add = '''
  nnoremap <silent> <space>b :Denite -mode=normal -buffer-name=buffers buffer<cr>
  nnoremap <silent> <space>c :Denite -mode=normal -buffer-name=colorschemes colorscheme<cr>
  nnoremap <silent> <space>f :Denite -mode=normal -buffer-name=files file_rec<cr>
  nnoremap <silent> <space>h :Denite -mode=normal -buffer-name=help help<cr>
  nnoremap <silent> <space>j :Denite -mode=normal -buffer-name=junkfile junkfile<cr>
  nnoremap <silent> <space>k :Denite -mode=normal -buffer-name=search grep:.<cr>
  nnoremap <silent> <space>l :Denite -mode=normal -buffer-name=dein dein_log<cr>
  nnoremap <silent> <space>o :Denite -mode=normal -buffer-name=outline outline<cr>
  nnoremap <silent> <space>t :Denite -mode=normal -buffer-name=tags tag<cr>
  nnoremap <silent> <space>q :Denite -mode=normal -buffer-name=quickfix quickfix<cr>
'''

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'chemzqm/unite-location'
on_if = 1
on_source = 'denite.vim'

[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "!has('nvim') && has('lua')"
on_event = 'InsertEnter'
hook_source = '''
  let g:neocomplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'ElmCast/elm-vim'
on_ft = 'elm'
hook_source = '''
  let g:elm_format_autosave = 1
'''

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
on_map = {n = '<Plug>'}
on_if = "isdirectory(bufname('%'))"
hook_source = 'source ~/.vim/rc/plugins/vimfiler.rc.vim'
hook_add = '''
  nnoremap <space>e :VimFilerCurrentDir<CR>
  nnoremap <space>s :new <bar> VimFilerCurrentDir<CR>
  nnoremap <space>v :vnew <bar> VimFilerCurrentDir<CR>
  nnoremap <space>E :VimFilerBufferDir<CR>
  nnoremap <space>S :sp <bar> VimFilerBufferDir<CR>
  nnoremap <space>V :vs <bar> VimFilerBufferDir<CR>
'''

[[plugins]]
repo = 'Shougo/junkfile.vim'
on_source = 'denite.vim'
on_if = 1
on_cmd = ['JunkfileOpen']

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap I  <Plug>(niceblock-I)
  xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
on_if = 1
hook_add = '''
  nmap gx <Plug>(openbrowser-smart-search)
  vmap gx <Plug>(openbrowser-smart-search)
'''
hook_source = '''
  let g:netrw_nogx = 1 " disable netrw's gx mapping.
  let g:openbrowser_default_search = "duckduckgo"
'''

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_map = '<Plug>'
hook_add = 'xmap p <Plug>(operator-replace)'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'
depends = 'vim-textobj-user'
on_map = {ox = '<Plug>'}

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = "has('nvim')"
depends = 'context_filetype.vim'
on_event = "InsertEnter"
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  source ~/.vim/rc/plugins/deoplete.rc.vim
'''

[[plugins]]
repo = 'mbbill/undotree'
on_cmd = 'UndotreeToggle'
hook_source = 'source ~/.vim/rc/plugins/undotree.rc.vim'
hook_add = '''
  nmap <leader>u :UndotreeToggle<CR>
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = 'vim-airline-themes'
on_event = 'VimEnter'
hook_source = 'source ~/.vim/rc/plugins/airline.rc.vim'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'ap/vim-css-color'
on_ft = ['css', 'scss', 'sass']

[[plugins]]
repo = 'raw1z/vim-repl'
on_cmd = ['OpenREPL', 'SendToREPL', 'SendVisualSelectionToREPL']
hook_add = '''
  nnoremap <leader><leader>! :OpenREPL<CR>
  nnoremap <leader>! :SendToREPL<CR>
  vnoremap <leader>! :SendVisualSelectionToREPL<CR>
'''

[[plugins]]
repo = 'slashmili/alchemist.vim'
on_ft = ['elixir']

[[plugins]]
repo = 'c-brenn/phoenix.vim'
on_ft = ['elixir']

[[plugins]]
repo = 'junegunn/gv.vim'
on_cmd = ['GV', 'GV!', 'GV?']

